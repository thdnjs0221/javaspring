<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

<!-- 	HandlerMapping, HandlerAdapter, ViewResolver, Validator
		 등의 MVC 프로그래밍 모델에서 사용될 전략 객체들이 자동 등록됨. -->
	<mvc:annotation-driven validator="validator">
		<mvc:async-support default-timeout="6000000"/>
		<mvc:argument-resolvers>
			<bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" 
		p:validationMessageSource-ref="messageSource"
	/>
	
	<bean id="IRVR" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp"
	/>
	
	<bean id="BNVR" class="org.springframework.web.servlet.view.BeanNameViewResolver" 
		p:order="1"
	/>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	
	<bean id="downloadView" class="kr.or.ddit.file.view.DownloadView" />
	
	<!-- 	Tiles Context 형성 -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" 
		p:definitions="/WEB-INF/tiles/*-definitions.xml"
		p:preparerFactoryClass="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"
	/>
	<bean id="TVR" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" 
		p:order="2"
	/>
	
	<!-- 	Controller layer 를 bean 으로 등록하기 위한 필터링 설정 -->
	
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" 
					expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" 
					expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<context:include-filter type="annotation" 
					expression="kr.or.ddit.view.ViewPreparerComponent"/>
	</context:component-scan>
	
	<!-- 	HandlerInterceptor : 스프링 컨테이너 밖에 존재하는 웹 필터의 역할을 대신하는 객체 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!--  language 이름의 요청 파라미터를 기준으로 현재 로케일을 변경하기 위한 인터셉터 -->
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" 
				p:paramName="language"
			/>		
		</mvc:interceptor>
		<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor" 
			p:cacheSeconds="0"
		/>
	</mvc:interceptors>
	<!-- 	정적 자원이 일괄 관리 되는 경우 활용. -->
	<mvc:resources location="/resources/" mapping="/resources/**" cache-period="0" />
	
	<bean id="bootstrapPaginationRender" class="kr.or.ddit.ui.BootstrapPaginationRender" />
	
	<bean id="paginationManager" class="kr.or.ddit.ui.DefaultPaginationManager">
		<constructor-arg name="rendererMap">
			<map>
				<entry key="default">
					<bean class="kr.or.ddit.ui.DefaultPaginationRenderer" />
				</entry>
				<entry key="bootstrap" value-ref="bootstrapPaginationRender" />
			</map>
		</constructor-arg>
	</bean>
</beans>













