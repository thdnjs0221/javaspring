<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="lprod" autoMapping="true" />
		<association property="buyer" autoMapping="true" />
		<collection property="cartList" ofType="CartVO" autoMapping="true">
			<association property="member" autoMapping="true" />
		</collection>
	</resultMap>
	<select id="selectProd" parameterType="string" resultMap="prodMap">
		WITH MEMBERVIEW AS (
		    SELECT MEMBER.*, CART.*
		    FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
		)
		SELECT
		    PROD_ID,    PROD_NAME,    PROD_LGU,
		    PROD_BUYER,    PROD_COST,    PROD_PRICE,
		    PROD_SALE,    PROD_OUTLINE,    PROD_DETAIL,
		    PROD_IMG,    PROD_TOTALSTOCK,    PROD_INSDATE,
		    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,
		    PROD_DELIVERY,    PROD_UNIT,    PROD_QTYIN,
		    PROD_QTYSALE,    PROD_MILEAGE
		    , LPROD_NM
		    , BUYER_ID, BUYER_NAME, BUYER_ADD1
		    , BUYER_CHARGER, BUYER_BANK
		    , CART_NO, CART_QTY
		    , TO_DATE(SUBSTR(CART_NO, 1, 8), 'YYYYMMDD') CART_DATE
            , MEM_ID, MEM_NAME, MEM_HP
            , MEM_MAIL, MEM_ADD1, MEM_MILEAGE
		FROM    PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
                            INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
                            LEFT OUTER JOIN MEMBERVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prodId}			
	</select>
	<sql id="fromFrag">
		FROM PRODVIEW
	</sql>
	<sql id="searchFrag">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
				AND PROD_LGU = #{detailCondition.prodLgu}
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
				AND PROD_BUYER = #{detailCondition.prodBuyer}
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
				AND INSTR(PROD_NAME, #{detailCondition.prodName}) > 0
			</if>
		</trim>
	</sql>
	<select id="selectTotalRecord" resultType="int" parameterType="PaginationInfo">
		SELECT COUNT(*)
		<include refid="fromFrag" />
		<include refid="searchFrag" />
	</select>
	<select id="selectProdList" parameterType="PaginationInfo" resultType="ProdVO">
		WITH ORDEREDPROD AS (
			SELECT ROWNUM RNUM, A.*
			FROM (
				SELECT 
					PROD_ID, PROD_NAME
					, PROD_PRICE, PROD_SALE, PROD_MILEAGE
					, LPROD_NM "lprod.lprodNm"
					, BUYER_NAME "buyer.buyerName"
					, (
						SELECT COUNT(DISTINCT CART_MEMBER)
						FROM CART
						WHERE CART_PROD = PROD_ID
					) MEM_COUNT
				<include refid="fromFrag" />
				<include refid="searchFrag" />		
				ORDER BY PROD_ID		
			) A	
		)
		SELECT *
		FROM ORDEREDPROD
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}	
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
			SELECT #{prodLgu} ||
			    LPAD(
			    NVL(TO_NUMBER(SUBSTR( MAX(PROD_ID), LENGTH(#{prodLgu})+1)), 0) + 1
			    , 6
			    , '0')
			FROM PROD
			WHERE PROD_LGU = #{prodLgu}
		</selectKey>
		INSERT INTO PROD(
			PROD_ID
			, PROD_NAME
			, PROD_LGU
			, PROD_BUYER
			, PROD_COST
			, PROD_PRICE
			, PROD_SALE
			, PROD_OUTLINE
			, PROD_DETAIL
			, PROD_IMG
			, PROD_TOTALSTOCK
			, PROD_INSDATE
			, PROD_PROPERSTOCK
			, PROD_SIZE
			, PROD_COLOR
			, PROD_DELIVERY
			, PROD_UNIT
			, PROD_QTYIN
			, PROD_QTYSALE
			, PROD_MILEAGE
		)VALUES(
			#{prodId,jdbcType=VARCHAR}
			, #{prodName,jdbcType=VARCHAR}
			, #{prodLgu,jdbcType=CHAR}
			, #{prodBuyer,jdbcType=CHAR}
			, #{prodCost,jdbcType=NUMERIC}
			, #{prodPrice,jdbcType=NUMERIC}
			, #{prodSale,jdbcType=NUMERIC}
			, #{prodOutline,jdbcType=VARCHAR}
			, #{prodDetail,jdbcType=CLOB}
			, #{prodImg,jdbcType=VARCHAR}
			, #{prodTotalstock,jdbcType=NUMERIC}
			, #{prodInsdate,jdbcType=DATE}
			, #{prodProperstock,jdbcType=NUMERIC}
			, #{prodSize,jdbcType=VARCHAR}
			, #{prodColor,jdbcType=VARCHAR}
			, #{prodDelivery,jdbcType=VARCHAR}
			, #{prodUnit,jdbcType=VARCHAR}
			, #{prodQtyin,jdbcType=NUMERIC}
			, #{prodQtysale,jdbcType=NUMERIC}
			, #{prodMileage,jdbcType=NUMERIC}
		)
	</insert>
	
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
		SET
			PROD_NAME= #{prodName,jdbcType=VARCHAR}
			, PROD_COST= #{prodCost,jdbcType=NUMERIC}
			, PROD_PRICE= #{prodPrice,jdbcType=NUMERIC}
			, PROD_SALE= #{prodSale,jdbcType=NUMERIC}
			, PROD_OUTLINE= #{prodOutline,jdbcType=VARCHAR}
			, PROD_DETAIL= #{prodDetail,jdbcType=CLOB}
			, PROD_TOTALSTOCK= #{prodTotalstock,jdbcType=NUMERIC}
			, PROD_INSDATE= #{prodInsdate,jdbcType=DATE}
			, PROD_PROPERSTOCK= #{prodProperstock,jdbcType=NUMERIC}
			, PROD_SIZE= #{prodSize,jdbcType=VARCHAR}
			, PROD_COLOR= #{prodColor,jdbcType=VARCHAR}
			, PROD_DELIVERY= #{prodDelivery,jdbcType=VARCHAR}
			, PROD_UNIT= #{prodUnit,jdbcType=VARCHAR}
			, PROD_QTYIN= #{prodQtyin,jdbcType=NUMERIC}
			, PROD_QTYSALE= #{prodQtysale,jdbcType=NUMERIC}
			, PROD_MILEAGE= #{prodMileage,jdbcType=NUMERIC}
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(prodImg)">
				, PROD_IMG= #{prodImg,jdbcType=VARCHAR}
			</if>
		WHERE PROD_ID= #{prodId,jdbcType=VARCHAR}
	</update>
</mapper>



















